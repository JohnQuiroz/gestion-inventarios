// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String     @default("default.png")
  role          Role?      @relation(fields: [roleId], references: [id])
  roleId        String?
  accounts      Account[]
  sessions      Session[]
  materials     Material[]
  movements     Movement[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now())
}

enum Enum_RoleName {
  ADMIN
  USER
}

model Role {
  id        String        @id @default(cuid())
  name      Enum_RoleName
  users     User[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now())
}

model Material {
  id        String     @id @default(cuid())
  name      String
  balance   Int        @default(0)
  createdBy User       @relation(fields: [userId], references: [id])
  userId    String
  movements Movement[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
}

model Movement {
  id         String   @id @default(cuid())
  entry      Int      @default(0)
  out        Int      @default(0)
  createdBy  User     @relation(fields: [userId], references: [id])
  userId     String
  material   Material @relation(fields: [materialId], references: [id])
  materialId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}
